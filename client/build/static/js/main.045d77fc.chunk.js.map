{"version":3,"sources":["App.js","index.js"],"names":["App","useState","title","author","body","date","posts","setPosts","post","setPost","handleChange","e","target","name","value","prevInput","useEffect","fetch","then","res","ok","json","jsonRes","className","onChange","onClick","preventDefault","newPost","axios","map","id","_id","delete","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAuHeA,MAnHf,WAQE,MAA0BC,mBAAS,CACjC,CACEC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,KAAM,QALV,mBAAOC,EAAP,KAAcC,EAAd,KAWA,EAAwBN,mBACtB,CACEC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,KAAM,MALV,mBAAOG,EAAP,KAAaC,EAAb,KA4BA,SAASC,EAAaC,GACpB,MAAsBA,EAAEC,OAAjBC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MACbL,GAAQ,SAAAM,GACN,kCAEOA,GAFP,kBAGKF,EAAOC,OA4BhB,OAlDAE,qBAAU,WAERC,MAAM,UAAUC,MAAK,SAAAC,GAEnB,GAAGA,EAAIC,GACL,OAAOD,EAAIE,UAGZH,MAAK,SAAAI,GAAO,OAAIf,EAASe,SA2C5B,sBAAKC,UAAU,MAAf,UAEE,0CAEA,iCAEE,uBAAOC,SAAUd,EAAcG,KAAK,QAAQC,MAAON,EAAKN,QACxD,uBAAOsB,SAAUd,EAAcG,KAAK,SAASC,MAAON,EAAKL,SACzD,uBAAOqB,SAAUd,EAAcG,KAAK,OAAOC,MAAON,EAAKJ,OACvD,uBAAOoB,SAAUd,EAAcG,KAAK,OAAOC,MAAON,EAAKH,OACvD,wBAAQoB,QAjCd,SAAiBd,GAEfA,EAAEe,iBAEF,IAAMC,EAAU,CACdzB,MAAOM,EAAKN,MACZC,OAAQK,EAAKL,OACbC,KAAMI,EAAKJ,KACXC,KAAMG,EAAKH,MAGbuB,IAAMpB,KAAK,WAAYmB,IAsBnB,yBAEDrB,EAAMuB,KAAI,SAAArB,GAET,OAEE,iCACE,6BAAKA,EAAKN,QACV,6BAAKM,EAAKL,SACV,4BAAIK,EAAKJ,OACT,4BAAII,EAAKH,OAET,wBAAQoB,QAAS,kBA9BPK,EA8BwBtB,EAAKuB,IA7B/CH,IAAMI,OAAO,WAAaF,QAC1BG,MAAM,gBAFR,IAAoBH,GA8BV,8BCvGZI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.045d77fc.chunk.js","sourcesContent":["import './App.css';\nimport {useState, useEffect} from 'react'\nimport axios from \"axios\";\n\nfunction App() {\n\n  \n\n  //using state which at first is empty but soon will store data collected from our MongoDB \n\n    //we are using an array of objects because state is saving multiple posts\n\n  const [posts, setPosts] = useState([\n    {\n      title: \" \",\n      author: \" \",\n      body: \" \",\n      date: null,\n    }\n  ]);\n\n   //setting state variable to hold user entered data\n  //note the single object \n  const [post, setPost] = useState(\n    {\n      title: \" \",\n      author: \" \",\n      body: \" \",\n      date: \" \",\n    }\n  );\n//CONNECTING TO BACKEND DATA AND DISPLAYING THAT DATA ON THE FRONT END\n\n  //fetch the data from /posts API and return a json\n\n  useEffect(() => {\n\n    fetch('/posts').then(res => {\n\n      if(res.ok) {\n        return res.json()\n      }\n      //set state equal to the json response\n    }).then(jsonRes => setPosts(jsonRes))\n\n  });\n\n    //POSTING NEW DATA TO THE BACKEND\n  \n   //handleChange tracks what is being typed \n   // 'e' has two peices of data, the name and value of inputs\n  function handleChange(e) {\n    const {name, value} = e.target;\n    setPost(prevInput => {\n      return(\n        {\n          ...prevInput,\n          [name]: value\n        }\n      )\n    })\n  }\n   //addPost function\n  function addPost(e) {\n    //a preventDefault is called on the event when submitting the form to prevent a browser reload/refresh.\n    e.preventDefault();\n    //gets value from state variable post\n    const newPost = {\n      title: post.title,\n      author: post.author,\n      body: post.body,\n      date: post.date\n    }\n    //posts newPost variable to proxy \n    axios.post('/newPost', newPost)\n  }\n  // REMOVING POST DATA FROM MONGODB\n\n  function deletePost(id){\n    axios.delete('/delete/' + id)\n    alert(\"Post Removed\")\n  }\n  \n  // input names are required to parse from body req in our server\n  //value is set to whatever value was saved in state variable post\n  return (\n    <div className=\"App\">\n\n      <h1>Add Post</h1>\n\n      <form>\n\n        <input onChange={handleChange} name=\"title\" value={post.title}></input>\n        <input onChange={handleChange} name=\"author\" value={post.author}></input>\n        <input onChange={handleChange} name=\"body\" value={post.body}></input>\n        <input onChange={handleChange} name=\"date\" value={post.date}></input>\n        <button onClick={addPost}>ADD POST</button>\n      </form>\n      {posts.map(post => {\n\n        return (\n\n          <form>\n            <h1>{post.title}</h1>\n            <h2>{post.author}</h2>\n            <p>{post.body}</p>\n            <p>{post.date}</p>\n            \n            <button onClick={() => deletePost(post._id)}>DELETE</button>\n          </form>\n        \n        )\n\n      })}\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}